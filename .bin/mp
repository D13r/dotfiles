#!/usr/bin/env bash
set -euo pipefail

quick=false
if [[ ${1-} = '--quick' ]]; then
    # This is a quick (no pun intended) hack for testing this script repeatedly
    # At some point I should implement proper option parsing
    quick=true
    shift
fi

list-instances() {
    instances=$(multipass list)
    style lwhite "$(echo "$instances" | head -n1)"
    echo "$instances" | tail -n+2
}

get-name() {
    if [[ $# -lt 1 ]]; then
        echo 'The name parameter is required' >&2
        exit 1
    fi

    name=$1
}

input() {
    local variable=$1
    local prompt=$2
    local default=$3

    if $quick; then
        REPLY=
    else
        read -p "$prompt [$default]: "
    fi

    eval "$variable=\${REPLY:-\$default}"
}

case "${1:-}" in

    '') # Help
        style lcyan,bold 'Multipass Shortcuts'
        echo "$(style lwhite 'mp l  NAME')  Launch a new instance with sensible defaults"
        echo "$(style lwhite 'mp h  NAME')  SSH to the given instance"
        echo "$(style lwhite 'mp d  NAME')  Suspend a running instance (down)"
        echo "$(style lwhite 'mp u  NAME')  Resume a stopped instance (up)"
        echo "$(style lwhite 'mp rm NAME')  Delete & purge instance (or --all)"
        echo
        echo "The default name is '$(style lwhite 'primary')'."
        echo
        echo "To list other commands run '$(style lwhite 'mp help')'."
        echo
        style lcyan,bold 'Current instances'
        list-instances
        ;;

    d|down) # Down
        shift
        multipass suspend "$@"
        list-instances
        ;;

    h|ssh) # SSH
        cmd=$1
        shift

        get-name "$@"
        shift

        $cmd "dave@$name.mshome.net" "$@"
        ;;

    l) # Launch
        shift

        get-name "$@"
        shift

        ip=$(dig +short "$name.djm.me")
        if [[ -n $ip ]]; then
            ip="$ip/24"
        fi

        input cpus 'CPUs' 4
        input disk 'Disk' 20G
        input memory 'Memory' 4G
        input image 'Image' lts
        input ip 'Static IP' "$ip"

        echo

        trap "rm /tmp/cloud-config-$$.yaml" EXIT

        sed "s!ADDRESSES![$ip]!; s!NAME!$name!" \
            ~/.multipass/cloud-config.yaml \
            > /tmp/cloud-config-$$.yaml

        multipass launch \
            --cloud-init /tmp/cloud-config-$$.yaml \
            --name "$name" \
            --cpus "$cpus" \
            --disk "$disk" \
            --memory "$memory" \
            --network 'name=Hyper-V Internal Network,mode=manual' \
            "$@" \
            "$image"

        echo
        list-instances

        ssh-keygen -f ~/.ssh/known_hosts -R "$name.mshome.net" &>/dev/null
        ssh-keygen -f ~/.ssh/known_hosts -R "$name.djm.me" &>/dev/null

        h "dave@$name.mshome.net" "$@"
        ;;

    rm) # Delete & purge
        shift

        get-name "$@"
        shift

        multipass delete "$name" "$@"
        echo "Instance '$name' moved to the recycle bin."
        echo "Run 'mp purge' to permanently delete it."

        ssh-keygen -f ~/.ssh/known_hosts -R "$name.mshome.net" &>/dev/null
        ssh-keygen -f ~/.ssh/known_hosts -R "$name.djm.me" &>/dev/null
        ;;

    scp) # Transfer
        shift
        exec multipass transfer "$@"
        ;;

    u|up) # Up
        shift
        multipass start "$@"
        list-instances
        ;;

    *)
        exec multipass "$@"
        ;;

esac
