#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/.."

help() {
    echo "Usage: $exe [OPTIONS] [--] ARG1 [ARG2...]"
    echo
    echo "Description here..."
    echo
    echo "Arguments:"
    echo "  ARG1                      a required positional argument"
    echo "  ARG2...                   optional positional arguments"
    echo
    echo "Options:"
    echo "  -b, --boolean             boolean flag, no value accepted"
    echo "  -h, --help                display this help"
    echo "  -o, --optional[=VALUE]    option with optional argument"
    echo "      --other               option with no short version"
    echo "  -r, --required=VALUE      option with required argument"
    echo
    echo "Additional explanation and links here if needed..."
}

exe=$(basename "$0")
args=$(getopt -n "$exe" -o 'hbr:o::' -l 'help,boolean,required:,optional,other::' -- "$@")
eval set -- "$args"

boolean=false other=false
unset optional required

while true; do
    case "$1" in
        -b | --boolean) boolean=true; shift ;;
        -h | --help) help; exit ;;
        -o | --optional) optional=${2:-default value}; shift 2 ;;
        --other) other=true; shift ;;
        -r | --required) required=$2; shift 2 ;;
        --) shift; break ;;
        *) echo "$exe: BUG: option '$1' was not handled" >&2; exit 2 ;;
    esac
done

if [[ $# -lt 1 ]]; then
    help >&2
    exit 1
fi

if [[ -v required && -z $required ]]; then
    echo "$exe: option '--required' requires a non-empty argument" >&2
    exit 1
fi

if [[ -v required ]]; then
    echo "-r or --required specified with value: $required"
else
    echo "-r or --required NOT specified"
fi

if [[ -v optional ]]; then
    echo "-o or --optional specified with value: $optional"
else
    echo "-o or --optional NOT specified"
fi

if $boolean; then
    echo "-b or --boolean specified"
else
    echo "-b or --boolean NOT specified"
fi

for arg in "$@"; do
    echo "$arg"
done
