#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/.."

# Parse arguments
args=$(getopt -n "$(basename "$0")" -o 'rt' -l 'root,tmux' -- "$@")
eval set -- "$args"

tmux=false
user='test'

while [[ $# -gt 0 ]]; do
    case "$1" in
        -r | --root) user='root'; shift ;;
        -t | --tmux) tmux=true; shift ;;
        --) shift; break ;;
    esac
done

# Build image
base=${1-ubuntu:latest}

case "$base" in
    *alpine*)
        family='alpine' ;;
    *almalinux* | *amazonlinux* | *fedora* | *oraclelinux* | *redhat* | *rockylinux* | sl | sl:*)
        family='redhat' ;;
    *)
        family='debian' ;;
esac

maybe-sudo-for-docker docker build --build-arg base="$base" --target "$family" -t dotfiles .

# Run it
opts=(-it --rm -u "$user")
if [[ -n $SSH_AUTH_SOCK ]]; then
    opts+=(--volume "$SSH_AUTH_SOCK:/tmp/ssh-agent" --env 'SSH_AUTH_SOCK=/tmp/ssh-agent')
fi

if $tmux; then
    exec maybe-sudo-for-docker docker run "${opts[@]}" --entrypoint /usr/bin/tmux dotfiles -2 new -A -s "$user"
else
    exec maybe-sudo-for-docker docker run "${opts[@]}" dotfiles
fi

